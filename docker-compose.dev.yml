services:
  api:
    container_name: ${API_HOSTNAME}
    build: 
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./.env:/usr/src/app/.env
      - ./api:/usr/src/app/api
      - ./app.js:/usr/src/app/app.js
      - ./server.js:/usr/src/app/server.js
      - ./package.json:/usr/src/app/package.json
    ports:
      - ${API_PORT}:${API_PORT}
    networks:
      - aiana
    develop:
      watch:
        - action: sync
          path: .
          target: /usr/src/app
          ignore:
            - node_modules/
            - database/
            - .git/
            - .vscode/
            - .idea/
            - .DS_Store
            - .dockerignore
            - Dockerfile
            - docker-compose.yml
            - docker-compose.dev.yml
            - start.prod.sh
            - start.dev.sh
            - "*.swp"  # Ignore Vim swap files
            - "*.tmp"  # Ignore temporary files
            - "*.log"  # Ignore log files
            - "*.pid"  # Ignore pid files
        - action: rebuild
          path: package.json

  redis:
    container_name: ${REDIS_HOSTNAME}
    image: "redis:alpine"
    depends_on:
      - mongodb
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - aiana

  mongodb:
    container_name: ${MONGODB_HOSTNAME}
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    restart: always
    volumes:
      - ./database:/data/db
    ports:
      - ${MONGODB_PORT}:${MONGODB_PORT}
    networks:
      - aiana

networks:
  aiana:
    driver: bridge
